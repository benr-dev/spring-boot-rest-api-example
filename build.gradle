plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

// Setup code coverage validation rules.
// NOTE: These do not get run using the default 'check' task.
// See the additional dependsOn modification below which
// causes the build to fail when coverage is not sufficient.
jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			limit {
				counter = 'LINE'
				minimum = 0.95
			}
			excludes = [
				// Exclude app entry point as not executed during unit tests
				'com.example.springrestappexample.SpringRestAppExampleApplication'
			]
		}
	}
}

// This is the modification that causes coverage validation failures
// to fail the build.
check.dependsOn jacocoTestCoverageVerification


